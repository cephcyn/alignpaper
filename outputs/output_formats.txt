This file describes the meaning of each column in the merged output CSVs:
- coreference.csv
- whitespace.csv
- (any single word).csv (future pipeline runs may include different anchor selection methods, and therefore name the merged output CSV something different?)

URL: 
- a URL at which the paper that the abstract belongs to can be found
ID: 
- within each set of input papers, each paper has a unique ID. 
- This is basically a "paper ID".
Type: 
- Whether this sentence came from the "Title" of the paper or the "Abstract" of the paper.
Index: 
- The index of the sentence within the section of the paper that it came from. 
- For example, if this is the first sentence of the abstract, the Index is 0. 
- If it is the second sentence of the abstract, the Index is 1. etc...
Text: 
- The full, unedited text of the sentence/phrase.

split_0: 
- the text literally preceding the anchor
split_1: 
- the text that the anchor consists of
split_2: 
- the text literally following the anchor
split_tokens: 
- The list of tokens that makes up the sentence
split_anchor_span: 
- the span that the anchor phrase covers within split_tokens 
- For example, if the anchor phrase = "the model BERT" (tokenized as ["the", "model", "BERT"]), the entire sentence = "we own the model BERT now" (tokenized as ["we", "own", "the", "model", "BERT", "now"]), then split_anchor_span would be (2, 5)
split_anchor_indices: 
- same thing as split_anchor_span, except instead of dealing with tokens it deals with character indices based on the text from split_0, split_1, and split_2 being merged together
within_anchor_index: 
- the index of the search term within split_1 
- For example, if the search term = "BERT", split_1 anchor term = "the model BERT", within_anchor_index would be 10

averb: 
- the verb that is most closely related to the anchor phrase 
- (the "verb that the anchor phrase interacts with")
averb_s: 
- a list of all phrases that are marked as subjects of averb or on the left hand side of averb (this may be changed later)
averb_o: 
- a list of all phrases that are marked as objects of averb or on the right hand side of averb (this may be changed later)
averb_relation: 
- the relationship between the anchor phrase and averb. 
- +1 if the anchor phrase is on the subject side
- -1 if the anchor is on the object side
- 0 if they overlap somehow (this should be uncommon)
averb_split:
- The split_n "column" that the averb is contained within 
- so 0 if before anchor, 1 if in anchor, 2 if after
averb_span0:
- The beginning index of the averb in the string ' '.join(split_tokens) (should be equivalent to split_0+split_1+split_2)
averb_span1:
- The ending index of the averb in the string ' '.join(split_tokens) (should be equivalent to split_0+split_1+split_2)
averb_cspan0:
- The beginning index of the averb in the split_n "column" it is contained within
averb_cspan1:
- The ending index of the averb in the split_n "column" it is contained within

root: 
- the root word of the sentence as identified by dependency tree parsing
root_full: 
- if the root word is a verb, then the entire main verb phrase of the sentence
- otherwise it's just the root word again
root_s: 
- a list of all phrases that are marked as subjects of root_full or on the left hand side of root_full (this may be changed later)
root_o: 
- same thing as root_s but objects or on the right hand side
root_split:
- The split_n "column" that the root is contained within 
- so 0 if before anchor, 1 if in anchor, 2 if after
root_span0:
- The beginning index of the root in the string ' '.join(split_tokens) (should be equivalent to split_0+split_1+split_2)
root_span1:
- The ending index of the root in the string ' '.join(split_tokens) (should be equivalent to split_0+split_1+split_2)
root_cspan0:
- The beginning index of the root in the split_n "column" it is contained within
root_cspan1:
- The ending index of the root in the split_n "column" it is contained within

fverb: 
- the first verb that comes after the anchor phrase

fword: 
- the first word that follows the anchor phrase, excluding things like punctuation.

apos: 
- a list that represents the part of speech of the anchor, followed by the parts of speech of "parent" words of the anchor phrase in ascending order
apos_w: 
- a list of the literal words associated with each of the parts of speech in apos, respectively
